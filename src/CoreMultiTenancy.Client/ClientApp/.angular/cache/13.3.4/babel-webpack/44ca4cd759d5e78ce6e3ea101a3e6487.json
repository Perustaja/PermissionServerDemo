{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Dev\\\\CoreMultiTenancy\\\\src\\\\CoreMultiTenancy.Client\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { AuthenticationResultStatus } from '../authorize.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { LogoutActions, ApplicationPaths, ReturnUrlType } from '../api-authorization.constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../authorize.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\"; // The main responsibility of this component is to handle the user's logout process.\n// This is the starting point for the logout process, which is usually initiated when a\n// user clicks on the logout button on the LoginMenu component.\n\nexport class LogoutComponent {\n  constructor(authorizeService, activatedRoute, router) {\n    this.authorizeService = authorizeService;\n    this.activatedRoute = activatedRoute;\n    this.router = router;\n    this.message = new BehaviorSubject(null);\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const action = _this.activatedRoute.snapshot.url[1];\n\n      switch (action.path) {\n        case LogoutActions.Logout:\n          if (!!window.history.state.local) {\n            yield _this.logout(_this.getReturnUrl());\n          } else {\n            // This prevents regular links to <app>/authentication/logout from triggering a logout\n            _this.message.next('The logout was not initiated from within the page.');\n          }\n\n          break;\n\n        case LogoutActions.LogoutCallback:\n          yield _this.processLogoutCallback();\n          break;\n\n        case LogoutActions.LoggedOut:\n          _this.message.next('You successfully logged out!');\n\n          break;\n\n        default:\n          throw new Error(`Invalid action '${action}'`);\n      }\n    })();\n  }\n\n  logout(returnUrl) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const state = {\n        returnUrl\n      };\n      const isauthenticated = yield _this2.authorizeService.isAuthenticated().pipe(take(1)).toPromise();\n\n      if (isauthenticated) {\n        const result = yield _this2.authorizeService.signOut(state);\n\n        switch (result.status) {\n          case AuthenticationResultStatus.Redirect:\n            break;\n\n          case AuthenticationResultStatus.Success:\n            yield _this2.navigateToReturnUrl(returnUrl);\n            break;\n\n          case AuthenticationResultStatus.Fail:\n            _this2.message.next(result.message);\n\n            break;\n\n          default:\n            throw new Error('Invalid authentication result status.');\n        }\n      } else {\n        _this2.message.next('You successfully logged out!');\n      }\n    })();\n  }\n\n  processLogoutCallback() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const url = window.location.href;\n      const result = yield _this3.authorizeService.completeSignOut(url);\n\n      switch (result.status) {\n        case AuthenticationResultStatus.Redirect:\n          // There should not be any redirects as the only time completeAuthentication finishes\n          // is when we are doing a redirect sign in flow.\n          throw new Error('Should not redirect.');\n\n        case AuthenticationResultStatus.Success:\n          yield _this3.navigateToReturnUrl(_this3.getReturnUrl(result.state));\n          break;\n\n        case AuthenticationResultStatus.Fail:\n          _this3.message.next(result.message);\n\n          break;\n\n        default:\n          throw new Error('Invalid authentication result status.');\n      }\n    })();\n  }\n\n  navigateToReturnUrl(returnUrl) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this4.router.navigateByUrl(returnUrl, {\n        replaceUrl: true\n      });\n    })();\n  }\n\n  getReturnUrl(state) {\n    const fromQuery = this.activatedRoute.snapshot.queryParams.returnUrl; // If the url is coming from the query string, check that is either\n    // a relative url or an absolute url\n\n    if (fromQuery && !(fromQuery.startsWith(`${window.location.origin}/`) || /\\/[^\\/].*/.test(fromQuery))) {\n      // This is an extra check to prevent open redirects.\n      throw new Error('Invalid return url. The return url needs to have the same origin as the current page.');\n    }\n\n    return state && state.returnUrl || fromQuery || ApplicationPaths.LoggedOut;\n  }\n\n}\n\nLogoutComponent.ɵfac = function LogoutComponent_Factory(t) {\n  return new (t || LogoutComponent)(i0.ɵɵdirectiveInject(i1.AuthorizeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nLogoutComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LogoutComponent,\n  selectors: [[\"app-logout\"]],\n  decls: 3,\n  vars: 3,\n  template: function LogoutComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx.message));\n    }\n  },\n  pipes: [i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dvdXQuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["C:/Dev/CoreMultiTenancy/src/CoreMultiTenancy.Client/ClientApp/src/api-authorization/logout/logout.component.ts"],"names":["AuthenticationResultStatus","BehaviorSubject","take","LogoutActions","ApplicationPaths","ReturnUrlType","i0","i1","i2","i3","LogoutComponent","constructor","authorizeService","activatedRoute","router","message","ngOnInit","action","snapshot","url","path","Logout","window","history","state","local","logout","getReturnUrl","next","LogoutCallback","processLogoutCallback","LoggedOut","Error","returnUrl","isauthenticated","isAuthenticated","pipe","toPromise","result","signOut","status","Redirect","Success","navigateToReturnUrl","Fail","location","href","completeSignOut","navigateByUrl","replaceUrl","fromQuery","queryParams","startsWith","origin","test","ɵfac","LogoutComponent_Factory","t","ɵɵdirectiveInject","AuthorizeService","ActivatedRoute","Router","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","template","LogoutComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵpipe","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","pipes","AsyncPipe","styles"],"mappings":"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","sourcesContent":["import { AuthenticationResultStatus } from '../authorize.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { LogoutActions, ApplicationPaths, ReturnUrlType } from '../api-authorization.constants';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../authorize.service\";\r\nimport * as i2 from \"@angular/router\";\r\nimport * as i3 from \"@angular/common\";\r\n// The main responsibility of this component is to handle the user's logout process.\r\n// This is the starting point for the logout process, which is usually initiated when a\r\n// user clicks on the logout button on the LoginMenu component.\r\nexport class LogoutComponent {\r\n    constructor(authorizeService, activatedRoute, router) {\r\n        this.authorizeService = authorizeService;\r\n        this.activatedRoute = activatedRoute;\r\n        this.router = router;\r\n        this.message = new BehaviorSubject(null);\r\n    }\r\n    async ngOnInit() {\r\n        const action = this.activatedRoute.snapshot.url[1];\r\n        switch (action.path) {\r\n            case LogoutActions.Logout:\r\n                if (!!window.history.state.local) {\r\n                    await this.logout(this.getReturnUrl());\r\n                }\r\n                else {\r\n                    // This prevents regular links to <app>/authentication/logout from triggering a logout\r\n                    this.message.next('The logout was not initiated from within the page.');\r\n                }\r\n                break;\r\n            case LogoutActions.LogoutCallback:\r\n                await this.processLogoutCallback();\r\n                break;\r\n            case LogoutActions.LoggedOut:\r\n                this.message.next('You successfully logged out!');\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n    }\r\n    async logout(returnUrl) {\r\n        const state = { returnUrl };\r\n        const isauthenticated = await this.authorizeService.isAuthenticated().pipe(take(1)).toPromise();\r\n        if (isauthenticated) {\r\n            const result = await this.authorizeService.signOut(state);\r\n            switch (result.status) {\r\n                case AuthenticationResultStatus.Redirect:\r\n                    break;\r\n                case AuthenticationResultStatus.Success:\r\n                    await this.navigateToReturnUrl(returnUrl);\r\n                    break;\r\n                case AuthenticationResultStatus.Fail:\r\n                    this.message.next(result.message);\r\n                    break;\r\n                default:\r\n                    throw new Error('Invalid authentication result status.');\r\n            }\r\n        }\r\n        else {\r\n            this.message.next('You successfully logged out!');\r\n        }\r\n    }\r\n    async processLogoutCallback() {\r\n        const url = window.location.href;\r\n        const result = await this.authorizeService.completeSignOut(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as the only time completeAuthentication finishes\r\n                // is when we are doing a redirect sign in flow.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.message.next(result.message);\r\n                break;\r\n            default:\r\n                throw new Error('Invalid authentication result status.');\r\n        }\r\n    }\r\n    async navigateToReturnUrl(returnUrl) {\r\n        await this.router.navigateByUrl(returnUrl, {\r\n            replaceUrl: true\r\n        });\r\n    }\r\n    getReturnUrl(state) {\r\n        const fromQuery = this.activatedRoute.snapshot.queryParams.returnUrl;\r\n        // If the url is coming from the query string, check that is either\r\n        // a relative url or an absolute url\r\n        if (fromQuery &&\r\n            !(fromQuery.startsWith(`${window.location.origin}/`) ||\r\n                /\\/[^\\/].*/.test(fromQuery))) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error('Invalid return url. The return url needs to have the same origin as the current page.');\r\n        }\r\n        return (state && state.returnUrl) ||\r\n            fromQuery ||\r\n            ApplicationPaths.LoggedOut;\r\n    }\r\n}\r\nLogoutComponent.ɵfac = function LogoutComponent_Factory(t) { return new (t || LogoutComponent)(i0.ɵɵdirectiveInject(i1.AuthorizeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router)); };\r\nLogoutComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: LogoutComponent, selectors: [[\"app-logout\"]], decls: 3, vars: 3, template: function LogoutComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"p\");\r\n        i0.ɵɵtext(1);\r\n        i0.ɵɵpipe(2, \"async\");\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, ctx.message));\r\n    } }, pipes: [i3.AsyncPipe], styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dvdXQuY29tcG9uZW50LmNzcyJ9 */\"] });\r\n"]},"metadata":{},"sourceType":"module"}